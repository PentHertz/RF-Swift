# This DockerFile is part of the RFSwift project
# Install type: subbuild for SDR
# Author(s): Sébastien Dudek (@FlUxIuS) @Penthertz
# website: penthertz.com

FROM ubuntu:22.04

LABEL "org.container.project"="rfswift"
LABEL "org.container.author"="Sébastien Dudek (FlUxIuS)"

RUN echo 'APT::Install-Suggests "0";' >> /etc/apt/apt.conf.d/00-docker
RUN echo 'APT::Install-Recommends "0";' >> /etc/apt/apt.conf.d/00-docker

# Installing basic packages
RUN DEBIAN_FRONTEND=noninteractive \
  apt-get update \
  && apt-get install -y python3 wget curl sudo software-properties-common \
  	gpg-agent pulseaudio udev python3-packaging vim autoconf build-essential \
  	build-essential cmake python3-pip libsndfile-dev scapy screen tcpdump \
  	qt5-qmake qtbase5-dev xterm libusb-1.0-0-dev pkg-config git apt-utils \
  	libusb-1.0-0 libncurses5-dev libtecla1 libtecla-dev dialog procps unzip \
  	texlive liblog4cpp5-dev libcurl4-gnutls-dev libpcap-dev libgtk-3-dev \
  	qtcreator qtcreator-data qtcreator-doc qtbase5-examples qtbase5-doc-html \
  	qtbase5-dev qtbase5-private-dev libqt5opengl5-dev libqt5svg5-dev \
  	libcanberra-gtk-module libcanberra-gtk3-module unity-tweak-tool libhdf5-dev \
	libreadline-dev automake qtdeclarative5-dev libqt5serialport5-dev \ 
	libqt5serialbus5-dev qttools5-dev golang-go

RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC \
	apt-get install tzdata

# Installing apt-fast wrapper
RUN DEBIAN_FRONTEND=noninteractive \
	apt-add-repository ppa:apt-fast/stable -y
RUN apt-get update && \
	echo apt-fast apt-fast/maxdownloads string 10 | debconf-set-selections && \
	echo apt-fast apt-fast/dlflag boolean true | debconf-set-selections && \
	echo apt-fast apt-fast/aptmanager string apt-get | debconf-set-selections && \
	apt-get -y install apt-fast python3-matplotlib

# Installing desktop features for next virtual desktop sessions
RUN echo apt-fast keyboard-configuration/layout string "English (US)" | debconf-set-selections && \
	echo apt-fast keyboard-configuration/variant string "English (US)" | debconf-set-selections && \
	apt-fast -y install task-lxqt-desktop && \
	apt-fast -y install language-pack-en && \
	update-locale

# Audio part
RUN apt-fast install -y pulseaudio-utils pulseaudio libasound2-dev libavahi-client-dev --no-install-recommends

COPY scripts /root/scripts/
COPY rules /root/rules/
COPY config /root/config/

WORKDIR /root/scripts/
RUN chmod +x entrypoint.sh

# Installing Terminal harnesses
RUN ./entrypoint.sh fzf_soft_install && \
	./entrypoint.sh zsh_tools_install && \
	./entrypoint.sh arsenal_soft_install
COPY config/.zshrc /root/.zshrc 

# Installing Devices 
## Installing peripherals
RUN ./entrypoint.sh ad_devices_install && \
	./entrypoint.sh nuand_devices_install && \
	./entrypoint.sh hackrf_devices_install && \
	./entrypoint.sh airspy_devices_install && \
	./entrypoint.sh limesdr_devices_install && \
	./entrypoint.sh osmofl2k_devices_install && \
	./entrypoint.sh xtrx_devices_install && \
	./entrypoint.sh funcube_devices_install
#RUN ./entrypoint.sh uhd_devices_install # to install after
#RUN ./entrypoint.sh antsdr_uhd_devices_install # Disable orignal UHD
#RUN ./entrypoint.sh nuand_devices_fromsource_install
#RUN ./entrypoint.sh rtlsdr_devices_install to install later
#RUN ./entrypoint.sh rtlsdrv4_devices_install # optionnal, remove rtlsdr_devices_install if you are using the v4 version

# Cleaning and quitting
WORKDIR /root/
RUN rm -rf /root/thirdparty
RUN rm -rf /root/rules/
RUN rm -rf /root/config/
RUN apt-fast clean
RUN DEBIAN_FRONTEND=noninteractive rm -rf /var/lib/apt/lists/*
#RUN useradd -ms /bin/bash phzapp
#USER phzapp
